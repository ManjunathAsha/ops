/*
 * CreateProjectPanel.java
 *
 * Created on den 21 december 2007, 08:48
 */

package idlcompiler.gui;

import Exceptions.MissingInputException;
import idlcompiler.files.Project;
import idlcompiler.files.TopicConfigFile;
import java.awt.FileDialog;
import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import util.FileHelper;

/**
 *
 * @author  angr
 */
public class CreateProjectPanel extends javax.swing.JPanel {
    
    String projectName = "";
    String projectDirPath = "";
    String topicConfigPath = "";
    String outputDirectoryPath = "";
    
    Frame parent;
    
    /** Creates new form CreateProjectPanel */
    public CreateProjectPanel(Frame parent) {
        this.parent = parent;
        initComponents();
    }
    
    public Project createProject() throws MissingInputException, IOException
    {
        projectName = FileHelper.cropExtension(projectNameTextField.getText());
        outputDirectoryPath = outputDirectoryTextField.getText();
        topicConfigPath = topicConfigTextField.getText();
        projectDirPath = projectDirTextField.getText();
        
        
        if(projectName.equals("")       || 
           projectDirPath.equals("")    || 
           topicConfigPath.equals("")   || 
           outputDirectoryPath.equals(""))
        {
            throw new MissingInputException("All fields were not filled in correctly.");
        }
        
        
        Project project = new Project(projectName, projectDirPath);
        
        if(!outputDirectoryPath.endsWith("/"))
        {
            outputDirectoryPath += "/";
        }
        
        project.setRelativeOutputPath(outputDirectoryPath);
        File f = new File(project.getRunDirectory() + "/" + topicConfigPath);
        f.getParentFile().mkdirs();
        project.setTopicConfig(new TopicConfigFile(f));
        
        project.enableCodeHighLighting(true);
        project.enableBuildAndJar(true);
        project.enableCppGeneration(true);
        project.enableCsGeneration(true);
        project.enableJavaGeneration(true);
        
        return project;        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        projectNameLabel = new javax.swing.JLabel();
        projectNameTextField = new javax.swing.JTextField();
        projectDirBrowseButton = new javax.swing.JButton();
        topConfigLabel = new javax.swing.JLabel();
        topicConfigTextField = new javax.swing.JTextField();
        topiConfigBrowseButton = new javax.swing.JButton();
        outputDirectoryLabel = new javax.swing.JLabel();
        outputDirectoryTextField = new javax.swing.JTextField();
        outputDirectoryBrowseButton = new javax.swing.JButton();
        projectDirTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        projectNameLabel.setText("Project name");

        projectNameTextField.setText("NewProject");

        projectDirBrowseButton.setText("Browse");
        projectDirBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectDirBrowseButtonActionPerformed(evt);
            }
        });

        topConfigLabel.setText("Select or create a topic config file (relative to project file)");

        topicConfigTextField.setText("TopicConfig.xml");

        topiConfigBrowseButton.setText("Browse");
        topiConfigBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topiConfigBrowseButtonActionPerformed(evt);
            }
        });

        outputDirectoryLabel.setText("Select the ouput directory for generated files (relative to project file)");

        outputDirectoryTextField.setText("Generated code/");

        outputDirectoryBrowseButton.setText("Browse");
        outputDirectoryBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputDirectoryBrowseButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Project directory");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(topicConfigTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(topiConfigBrowseButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(projectDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(projectDirBrowseButton))
                    .addComponent(topConfigLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(outputDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(outputDirectoryBrowseButton))
                    .addComponent(outputDirectoryLabel)
                    .addComponent(jLabel1)
                    .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectNameLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(projectNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(projectNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projectDirBrowseButton)
                    .addComponent(projectDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(topConfigLabel)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topicConfigTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(topiConfigBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputDirectoryLabel)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(outputDirectoryBrowseButton))
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void projectDirBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projectDirBrowseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //fc.setFileFilter(new ProjectFileFilter());
        fc.setVisible(true);
        
        int result = fc.showOpenDialog(parent);
        
        if(result == JFileChooser.APPROVE_OPTION)
        {
            projectDirPath = fc.getSelectedFile().getPath();        
            projectDirTextField.setText(projectDirPath);
        }

}//GEN-LAST:event_projectDirBrowseButtonActionPerformed

    private void topiConfigBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topiConfigBrowseButtonActionPerformed
        FileDialog fd = new FileDialog(parent);
        fd.setVisible(true);

        String s = fd.getDirectory() + fd.getFile();
        if (s == null)
        {
            return;
        }
        if (!s.endsWith(".xml"))
        {
            s += ".xml";
        }
        topicConfigPath = FileHelper.getRelativePath(new File(projectDirPath), new File(s));
        topicConfigTextField.setText(topicConfigPath);
    }//GEN-LAST:event_topiConfigBrowseButtonActionPerformed

    private void outputDirectoryBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outputDirectoryBrowseButtonActionPerformed
        // TODO add your handling code here:
        
        
        JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.setVisible(true);
        int result = fc.showOpenDialog(parent);
        
        if(result == JFileChooser.APPROVE_OPTION)
        {
            String s = FileHelper.getRelativePath(new File(projectDirPath), fc.getSelectedFile());
            outputDirectoryPath = s;
            outputDirectoryTextField.setText(outputDirectoryPath);
        }
       

    }//GEN-LAST:event_outputDirectoryBrowseButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton outputDirectoryBrowseButton;
    private javax.swing.JLabel outputDirectoryLabel;
    private javax.swing.JTextField outputDirectoryTextField;
    private javax.swing.JButton projectDirBrowseButton;
    private javax.swing.JTextField projectDirTextField;
    private javax.swing.JLabel projectNameLabel;
    private javax.swing.JTextField projectNameTextField;
    private javax.swing.JLabel topConfigLabel;
    private javax.swing.JButton topiConfigBrowseButton;
    private javax.swing.JTextField topicConfigTextField;
    // End of variables declaration//GEN-END:variables
    
}
