/*
 * SubscribeTopicDebugger.java
 *
 * Created on den 28 maj 2008, 15:20
 */
package opsdebugger2.topicdebuggers;

import java.util.Observable;
import opsdebugger2.tranferhandlers.TopicTransferHandler;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Observer;
import javax.swing.JOptionPane;
import javax.swing.border.TitledBorder;
import ops.Subscriber;
import opsdebugger2.OPSDebugger2App;

/**
 *
 * @author  angr
 */
public class SubscribeTopicDebugger extends javax.swing.JPanel implements Observer
{

    /** Creates new form SubscribeTopicDebugger */
    public SubscribeTopicDebugger()
    {
        initComponents();

        TopicTransferHandler tTransHand = new TopicTransferHandler();
        tTransHand.addPropertyChangeListener(new PropertyChangeListener()
        {

            public void propertyChange(PropertyChangeEvent evt)
            {
                String valeuName = (String) evt.getNewValue();
                openNewSubscriber(valeuName);

            }
        });



        setTransferHandler(tTransHand);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(opsdebugger2.OPSDebugger2App.class).getContext().getResourceMap(SubscribeTopicDebugger.class);
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("Form.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 11), resourceMap.getColor("Form.border.titleColor"))); // NOI18N
        setName("Form"); // NOI18N
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    }// </editor-fold>//GEN-END:initComponents

    public void update(Observable o, Object arg)
    {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private void openNewSubscriber(String valeuName)
    {

        if (valeuName.equals(opsdebugger2.OPSDebugger2App.getActiveSubscriberProxy().getTopic().getName()))
        {
            Subscriber sub = OPSDebugger2App.getOPSFactory().createSubscriber(valeuName);

            if (sub != null)
            {
                //sub.setThreadPolicy(Subscriber.EXCLUSIVE);
                String topicName = valeuName;
                TopicInspectorPanel tip = new TopicInspectorPanel(sub, valeuName);

                sub.start();
                add(tip);
                tip.setVisible(true);
                tip.updateUI();
                ((TitledBorder) getBorder()).setTitle("");
                updateUI();
            }
        } else
        {
            ((TitledBorder) getBorder()).setTitle("Error: " + valeuName + " is not a valid topic, you can only drop topics on this panel...");
            updateUI();
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
