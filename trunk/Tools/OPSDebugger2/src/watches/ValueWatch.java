/*
 * ValueWatch.java
 *
 * Created on den 2 juni 2008, 21:37
 */

package watches;

import opsdebugger2.OPSDebugger2App;
import opsdebugger2.proxy.ValueListener;

/**
 *
 * @author  angr
 */
public class ValueWatch extends javax.swing.JPanel implements ValueListener
{
    private String valueOfInterest;
    double min = Double.MAX_VALUE;
    double max = Double.MIN_VALUE;
    /** Creates new form ValueWatch */
    public ValueWatch() 
    {
        initComponents();
        OPSDebugger2App.getActiveSubscriberProxy().add(this);
        topicNameLabel.setText("From " + OPSDebugger2App.getActiveSubscriberProxy().getTopic().getName());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        valueNameLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        minLabel = new javax.swing.JLabel();
        maxLabel = new javax.swing.JLabel();
        minValueLabel = new javax.swing.JLabel();
        maxValueLabel = new javax.swing.JLabel();
        topicNameLabel = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setMaximumSize(new java.awt.Dimension(318, 121));
        setName("Form"); // NOI18N
        setPreferredSize(new java.awt.Dimension(318, 121));

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(opsdebugger2.OPSDebugger2App.class).getContext().getResourceMap(ValueWatch.class);
        valueNameLabel.setFont(resourceMap.getFont("valueNameLabel.font")); // NOI18N
        valueNameLabel.setText(resourceMap.getString("valueNameLabel.text")); // NOI18N
        valueNameLabel.setName("valueNameLabel"); // NOI18N

        valueLabel.setFont(resourceMap.getFont("valueLabel.font")); // NOI18N
        valueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        valueLabel.setText(resourceMap.getString("valueLabel.text")); // NOI18N
        valueLabel.setName("valueLabel"); // NOI18N

        minLabel.setText(resourceMap.getString("minLabel.text")); // NOI18N
        minLabel.setName("minLabel"); // NOI18N

        maxLabel.setText(resourceMap.getString("maxLabel.text")); // NOI18N
        maxLabel.setName("maxLabel"); // NOI18N

        minValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        minValueLabel.setText(resourceMap.getString("minValueLabel.text")); // NOI18N
        minValueLabel.setName("minValueLabel"); // NOI18N

        maxValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        maxValueLabel.setText(resourceMap.getString("maxValueLabel.text")); // NOI18N
        maxValueLabel.setName("maxValueLabel"); // NOI18N

        topicNameLabel.setText(resourceMap.getString("topicNameLabel.text")); // NOI18N
        topicNameLabel.setName("topicNameLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(topicNameLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valueNameLabel)
                            .addComponent(maxLabel)
                            .addComponent(minLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(minValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .addComponent(maxValueLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                            .addComponent(valueLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topicNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(valueNameLabel)
                    .addComponent(valueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maxLabel)
                    .addComponent(maxValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minValueLabel)
                    .addComponent(minLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel maxLabel;
    private javax.swing.JLabel maxValueLabel;
    private javax.swing.JLabel minLabel;
    private javax.swing.JLabel minValueLabel;
    private javax.swing.JLabel topicNameLabel;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel valueNameLabel;
    // End of variables declaration//GEN-END:variables

    public void onNewValue(Object value)
    {
        try
        {
            double dVal = ((Double) value).doubleValue();
            valueLabel.setText("" + dVal);
            
            if (dVal < min)
            {
                min = dVal;
                minValueLabel.setText("" + min);
            }
            if (dVal > max)
            {
                max = dVal;
                maxValueLabel.setText("" + max);
            }
            
            updateUI();
        }
        catch (Exception e)
        {
            topicNameLabel.setText("Error: Variable not a numeric?");
        }
        firePropertyChange("", null, null);
    }

    public String valueOfInterest()
    {
        return valueOfInterest;
        
    }

    public void setValueOfInterest(String valueOfInterest)
    {
        this.valueOfInterest = valueOfInterest;
        valueNameLabel.setText(valueOfInterest);
        updateUI();
    }

}
