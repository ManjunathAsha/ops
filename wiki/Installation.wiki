[Installation] [SimpleCpp Examples] [BuildInstructions]
----
=OPS â€“ Installation (Windows XP)=

==Set Up Your Environment==
   Make sure you have a Java SE Development Kit (JDK, version 5 or higher) installed on
   your system. The tools you use to create systems with OPS are all running in Java and
   use the Java compiler to generate pre-compiled code to use for debugging. If you know 
   you will only use OPS for C++ and C# and do not need any debugging capabilities, it may
   be sufficient to only have a Java runtime environment installed. It is strongly
   recommended to install a JDK though.
   If you do not have a JDK installed on your system follow these steps:
   #	Download the latest JDK from java.sun.com, (Tip! Select a bundle with Netbeans and you are ready to open the OPS sample Netbeans Java projects!)       http://java.sun.com/javase/downloads/
   #	Install it, you will need administrator rights on your system.
   #	When installed, add the newly created directory
        "C:\Program Files\Java\jdk.jdk.version\bin" to your user environment variable
        called path, you can do this without being an administrator of your system.
==Download OPS Binaries==
   Go to [http://code.google.com/p/ops/downloads/list Downloads] to get the latest 
   binaries for the languages you want to use OPS with. You will also need the
   latest Tools. Unpack all the zip files you downloaded directly under a common 
   director (E.g. C:\OPS\, this directory will be refered to as OPS_DIR from here on).

   After unpacking the zip files, make sure your directory structure look as follows:

      * OPS_DIR
         * C++
         * Examples
         * Java
         * Tools

   ----
   Or, go [BuildInstructions here], if you are interested in building OPS 
   from source.
   ----
==Run the IDL Builder and Build !TestAll Example Project==
   Open OPS IDL Builder, from OPS_DIR\Tools\OPS IDL Builder\bin\ops_idl_builder_nb.exe
   Use the OPS IDL Builder to open !TestAll sample IDL project (File->Open
   Project...browse to OPS_DIR\Examples\!TestAll, check open as main project and
   click Open Project.). 

   Once open, expand "!TestAll" and "testall" package folder and checkout the IDL files    
   making up this example.

   When ready, build the project by hitting the blue build hammer or right click your 
   project and select "Build".

   When you build your project, a dos prompt will pop up showing you the progress of 
   building java jar files. This output is quite verbose and it can be hard to see if it 
   succeds or not. Checkout the following video to se what it should look like. If it does 
   not work, it is probably because you have not put your Java JDK on your path correctly 
   and it will output something like "javac is not a command or program".

   (Note, click the video to see it on !YouTube in fullscreen)

   <wiki:video url="http://www.youtube.com/watch?v=AxutJA2-DNQ"/>

   You can read more about the OPS IDL Builder [IDLCompilerTutorial here].

==Use the OPS Debugger to Get Going With Some Pub-Sub==

  Open the OPS Debugger (double click OPS_DIR\Tools\OPS Debugger\OPSDebugger2.jar)
  Once open, click "File->Open Project..." and browse to OPS_DIR\Examples\!TestAll\!DebugProject.xml
  To the right you can now see the a drop down list with topics (!ChildTopic in this case).
  Drag the Topic from the tree view on Subscribers or Publishers to subscribe to or publish on the topic.
  Watch this video to see how to get some action:

  <wiki:video url="http://www.youtube.com/watch?v=W3bupBA16VM"/>

==Build and Run C++ Examples ==
  Now, open
  OPS_DIR\Examples\TestAllC++Test\TestAllC++Test\TestAllC++Test.sln
  with MS Visual Studio 2008 C++ Express or pro.
  You vill see that the solution contains two projects:
  TestAll_Subscribe  and
  TestAll_Publish

  Build the solution and make sure tou get no errors (at some installations you will get 
  linker warnings, this is a known issue.)
  When build succeds, hit run and both projects should open and start communicating. 

  (Video comming soon)

==Build and Run Java Examples ==
  ----
  Note, this instruction assumes you have [http://www.netbeans.org Netbeans IDE] installed.
  if you haven't, you can still use the soucres provided under OPS_DIR\TestAllJavaTest\src
  to build with whatever tool you like to use. Just make sure you link 
  OPS_DIR\Java\OPSJLib.jar.
  ----
  Open Netbeans IDE. Once open click File->Open Project... and browse to 
  OPS_DIR\!TestAllJavaTest
  and open !TestAllJavaTestPublisher and !TestAllJavaTestSubscriber
  Build the projects and run them one by one (Right click project and select Run).
  In the ouput windows you should now see an indication that communication is working.
  Try starting the OPS Debugger and the C++ subscriber and publisher examples from above 
  and see that they get and send data to Java and vice verca. 

  ----
  Note, if you see a "Reference Problem" alert when opening the projects, click "Resolve"
  and browse to the missing jar files (OPS_DIR\Java\OPSJLib.jar and 
  OPS_DIR\Examples\TestAll\Generated\TestAll.jar)   
  ----

  If you've come this far, you are ready create some apps of your own, good luck!
  
   