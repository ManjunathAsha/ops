It is possible to be notified if an error occurs in any of the OPS core threads.
the {{{ops::Participant}}} class accepts {{{ops::Listener<ops::Error*>}}} which will be notified with an {{{ops::Error}}} when an error occurs. The following shows how to implement a listener:

{{{
class MyErrorListener : public Listener<ops::Error*>
{
public:
	void onNewEvent(ops::Notifier<ops::Error*>* notifier, ops::Error* error)
	{
		// do something with error
                error->getErrorCode();
                error->getMessage();
	}

};
}}}

For the purpose of only logging errors, OPS' C++ imlementation comes with a predefined class called {{{ops::ErrorWriter}}} which can be used to print to any {{{std::o_stream}}}. This is how you use it:

{{{
ErrorWriter errorWriter(std::cout);
participant->addListener(&errorWriter);
}}}

The above code will have all errors reported printed to the console with a timestamp.