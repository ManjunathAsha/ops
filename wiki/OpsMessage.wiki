When data is sent over OPS, it is always packaged in something called Message. Message is just like your own data types you define in IDL also an OPSObject. The message in turn has another OPSObject field called *data* which is the actual data of the IDL type you defined in your topic configuration.

When you receive data with a subscriber you can choose to access the data sample directly, or you can access the Message, which holds some important meta information about the publication, such as *publicationID*, *publisherName* and *key*.   

Let's look on an example on how you can read the Message from a subscriber:

In Java:

{{{
OPSMessage message = sub.getMessage();
System.out.println("Publication " + message.getPublicationID() + " from " + message.getPublisherName());

}}}

Or similar in C++:

{{{
OPSMessage* message = sub.getMessage();
std::cout << "Publication " << message->getPublicationID() << " from " << message->getPublisherName() << std::endl;

}}}