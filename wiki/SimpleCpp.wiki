[Installation] [SimpleCpp Examples] [BuildInstructions]
----




    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>Google Wave Embed API Example: Simple Wave</title>
    <script src="http://wave-api.appspot.com/public/embed.js" type="text/javascript"></script>
    <script type="text/javascript">
    function initialize() {
      var wavePanel = new WavePanel('http://wave.google.com/a/wavesandbox.com/');
      wavePanel.loadWave('wavesandbox.com!w+waveID');
      wavePanel.init(document.getElementById('waveframe'));
    }
    </script>
  
  <body onload="initialize()">
    <div id="waveframe" style="width: 500px; height: 100%"></div>
  </body>



=Basic C++ Example=

Given the following type defined in [IDLCompilerTutorial OPS IDL]:

{{{

package foo;

class FooData
{
    string fooText;
}
}}}

And a topic FooTopic for that data type.

This is how you create a subscriber

{{{

Participant* participant = Participant::getInstance("FooDomain");
participant->addTypeSupport(new Foo::FooTypeFactory());

Topic topic = participant->createTopic("FooTopic");

FooDataSubscriber sub(topic);

...

}}}

This is how you create a publisher

{{{

ops::Participant* participant = Participant::getInstance("FooDomain");
participant->addTypeSupport(new Foo::FooTypeFactory());

Topic topic = participant->createTopic("FooTopic");

FooDataPublisher pub(topic);

...


}}}